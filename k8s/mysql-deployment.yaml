apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: microservices
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: "password"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: microservices
data:
  MYSQL_DATABASE: "microservices_db"

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: microservices
spec:
  serviceName: mysql-service
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql 
    spec:
      containers:
      - name: mysql
        image: mysql:8
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: MYSQL_DATABASE
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
  volumeClaimTemplates:
  - metadata:
      name: mysql-storage
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: microservices
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
  type: ClusterIP
  clusterIP: None  # Headless service for StatefulSet

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-service-external
  namespace: microservices
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
  type: ClusterIP

---

apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-init-job
  namespace: microservices
spec:
  template:
    spec:
      containers:
      - name: mysql-init
        image: mysql:8
        command:
        - /bin/bash
        - -c
        - |
          echo "Waiting for MySQL to be ready..."
          until mysql -h mysql-service-external -u root -p$MYSQL_ROOT_PASSWORD -e "SELECT 1"; do
            echo "MySQL not ready yet, waiting..."
            sleep 5
          done
          echo "MySQL is ready!"
          
          echo "Creating initial database schema..."
          mysql -h mysql-service-external -u root -p$MYSQL_ROOT_PASSWORD <<EOF
          CREATE DATABASE IF NOT EXISTS microservices_db;
          USE microservices_db;
          
          CREATE TABLE IF NOT EXISTS users (
            id INT AUTO_INCREMENT PRIMARY KEY,
            username VARCHAR(50) UNIQUE NOT NULL,
            email VARCHAR(100) UNIQUE NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
          
          CREATE TABLE IF NOT EXISTS products (
            id INT AUTO_INCREMENT PRIMARY KEY,
            name VARCHAR(100) NOT NULL,
            description TEXT,
            price DECIMAL(10,2) NOT NULL,
            stock INT DEFAULT 0,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
          
          CREATE TABLE IF NOT EXISTS orders (
            id INT AUTO_INCREMENT PRIMARY KEY,
            user_id INT,
            product_id INT,
            quantity INT NOT NULL,
            total_price DECIMAL(10,2) NOT NULL,
            status VARCHAR(20) DEFAULT 'pending',
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES users(id),
            FOREIGN KEY (product_id) REFERENCES products(id)
          );
          
          INSERT IGNORE INTO users (username, email) VALUES 
            ('admin', 'admin@example.com'),
            ('testuser', 'test@example.com');
          
          INSERT IGNORE INTO products (name, description, price, stock) VALUES 
            ('Sample Product 1', 'This is a sample product', 29.99, 100),
            ('Sample Product 2', 'Another sample product', 49.99, 50);
          EOF
          
          echo "Database initialization completed!"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_ROOT_PASSWORD
      restartPolicy: Never
  backoffLimit: 3